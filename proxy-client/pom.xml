<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.fengfei</groupId>
        <artifactId>lanproxy</artifactId>
        <version>0.1</version>
    </parent>
    <artifactId>proxy-client</artifactId>
    <packaging>jar</packaging>
    <name>proxy-client</name>
    <url>http://maven.apache.org</url>
    <dependencies>
        <dependency>
            <groupId>org.fengfei</groupId>
            <artifactId>proxy-common</artifactId>
            <version>0.1</version>
        </dependency>
        <dependency>
            <groupId>org.fengfei</groupId>
            <artifactId>proxy-protocol</artifactId>
            <version>0.1</version>
        </dependency>
    </dependencies>
    <build>
        <finalName>proxy-client-${project.version}</finalName>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>2.4</version>

                <configuration>
                    <archive>
                        <manifest>
                            <!-- 指定Main方法入口的class -->
                            <mainClass>org.fengfei.lanproxy.client.ProxyClientContainer</mainClass>
                            <!-- 在jar包的MANIFEST.MF文件中生成Class-Path属性 -->
                            <addClasspath>true</addClasspath>
                            <!-- Class-Path 前缀 -->
                            <classpathPrefix>lib/</classpathPrefix>
                        </manifest>
                        <manifestEntries>
                            <!-- 在Class-Path下添加配置文件的路径 -->
                            <Class-Path>conf/</Class-Path>
                        </manifestEntries>
                    </archive>
                    <includes>
                        <!-- 打jar包时，将class文件打包进去 -->
                        <include>**/*.class</include>
                        <!-- 打jar包时，将mybatis的mapper文件打包进去 -->
                    </includes>
                </configuration>
            </plugin>
            <!-- 拷贝依赖的jar包到lib目录 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/lib</outputDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <!-- 项目资源插件 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <version>2.6</version>
                <executions>
                    <execution>
                        <id>copy-resources</id>
                        <phase>package</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <encoding>UTF-8</encoding>
                            <!-- 拷贝项目src/main/resources/下所有文件到conf/目录下 -->
                            <outputDirectory>${project.build.directory}/conf</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>src/main/resources/</directory>
                                    <filtering>true</filtering>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>
